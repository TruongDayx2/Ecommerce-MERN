{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest } from \"../requestMethods\";\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, getProductFailure, getProductStart, getProductSuccess } from \"./productRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n  try {\n    // update\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};","map":{"version":3,"names":["loginFailure","loginStart","loginSuccess","publicRequest","deleteProductFailure","deleteProductStart","deleteProductSuccess","getProductFailure","getProductStart","getProductSuccess","login","dispatch","user","res","post","data","err","getProducts","get","deleteProduct","id","updateProduct","product","updateProductStart","updateProductSuccess","updateProductFailure","addProduct","addProductStart","userRequest","addProductSuccess","addProductFailure"],"sources":["D:/MERN/Ecommerce-MERN/admin/src/redux/apiCalls.js"],"sourcesContent":["import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\r\nimport { publicRequest } from \"../requestMethods\";\r\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, getProductFailure, getProductStart, getProductSuccess } from \"./productRedux\";\r\n\r\nexport const login = async (dispatch, user) => {\r\n  dispatch(loginStart());\r\n  try {\r\n    const res = await publicRequest.post(\"/auth/login\", user);\r\n    dispatch(loginSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(loginFailure());\r\n  }\r\n};\r\n\r\nexport const getProducts = async (dispatch) => {\r\n  dispatch(getProductStart());\r\n  try {\r\n    const res = await publicRequest.get(\"/products\");\r\n    dispatch(getProductSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(getProductFailure());\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id, dispatch) => {\r\n  dispatch(deleteProductStart());\r\n  try {\r\n    // const res = await userRequest.delete(`/products/${id}`);\r\n    dispatch(deleteProductSuccess(id));\r\n  } catch (err) {\r\n    dispatch(deleteProductFailure());\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (id, product, dispatch) => {\r\n  dispatch(updateProductStart());\r\n  try {\r\n    // update\r\n    dispatch(updateProductSuccess({ id, product }));\r\n  } catch (err) {\r\n    dispatch(updateProductFailure());\r\n  }\r\n};\r\nexport const addProduct = async (product, dispatch) => {\r\n  dispatch(addProductStart());\r\n  try {\r\n    const res = await userRequest.post(`/products`, product);\r\n    dispatch(addProductSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(addProductFailure());\r\n  }\r\n};"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,EAAEC,YAAY,QAAQ,aAAa;AACpE,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,oBAAoB,EAAEC,kBAAkB,EAAEC,oBAAoB,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,iBAAiB,QAAQ,gBAAgB;AAEtJ,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAQ,EAAEC,IAAI,KAAK;EAC7CD,QAAQ,CAACV,UAAU,EAAE,CAAC;EACtB,IAAI;IACF,MAAMY,GAAG,GAAG,MAAMV,aAAa,CAACW,IAAI,CAAC,aAAa,EAAEF,IAAI,CAAC;IACzDD,QAAQ,CAACT,YAAY,CAACW,GAAG,CAACE,IAAI,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZL,QAAQ,CAACX,YAAY,EAAE,CAAC;EAC1B;AACF,CAAC;AAED,OAAO,MAAMiB,WAAW,GAAG,MAAON,QAAQ,IAAK;EAC7CA,QAAQ,CAACH,eAAe,EAAE,CAAC;EAC3B,IAAI;IACF,MAAMK,GAAG,GAAG,MAAMV,aAAa,CAACe,GAAG,CAAC,WAAW,CAAC;IAChDP,QAAQ,CAACF,iBAAiB,CAACI,GAAG,CAACE,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZL,QAAQ,CAACJ,iBAAiB,EAAE,CAAC;EAC/B;AACF,CAAC;AAED,OAAO,MAAMY,aAAa,GAAG,OAAOC,EAAE,EAAET,QAAQ,KAAK;EACnDA,QAAQ,CAACN,kBAAkB,EAAE,CAAC;EAC9B,IAAI;IACF;IACAM,QAAQ,CAACL,oBAAoB,CAACc,EAAE,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACZL,QAAQ,CAACP,oBAAoB,EAAE,CAAC;EAClC;AACF,CAAC;AAED,OAAO,MAAMiB,aAAa,GAAG,OAAOD,EAAE,EAAEE,OAAO,EAAEX,QAAQ,KAAK;EAC5DA,QAAQ,CAACY,kBAAkB,EAAE,CAAC;EAC9B,IAAI;IACF;IACAZ,QAAQ,CAACa,oBAAoB,CAAC;MAAEJ,EAAE;MAAEE;IAAQ,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,OAAON,GAAG,EAAE;IACZL,QAAQ,CAACc,oBAAoB,EAAE,CAAC;EAClC;AACF,CAAC;AACD,OAAO,MAAMC,UAAU,GAAG,OAAOJ,OAAO,EAAEX,QAAQ,KAAK;EACrDA,QAAQ,CAACgB,eAAe,EAAE,CAAC;EAC3B,IAAI;IACF,MAAMd,GAAG,GAAG,MAAMe,WAAW,CAACd,IAAI,CAAE,WAAU,EAAEQ,OAAO,CAAC;IACxDX,QAAQ,CAACkB,iBAAiB,CAAChB,GAAG,CAACE,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZL,QAAQ,CAACmB,iBAAiB,EAAE,CAAC;EAC/B;AACF,CAAC"},"metadata":{},"sourceType":"module"}